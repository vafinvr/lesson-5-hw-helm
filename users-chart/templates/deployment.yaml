apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "users-chart.fullname" . }}
  labels:
    {{- include "users-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "users-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "users-chart.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          envFrom:
          - configMapRef:
              name: {{ include "users-chart.fullname" . }}-config
          - secretRef:
              name: {{ include "users-chart.fullname" . }}-secret
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h ${DB_HOST%%:*} -p ${DB_HOST##*:}; 
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          ports:
            - name: srvport
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            httpGet:
              path: /health
              port: srvport
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            httpGet:
              path: /health
              port: srvport
          envFrom:
          - configMapRef:
              name: {{ include "users-chart.fullname" . }}-config
          - secretRef:
              name: {{ include "users-chart.fullname" . }}-secret